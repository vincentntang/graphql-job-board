# Query fetches data, no side effects
type Query {
  company(id: ID!): Company
  job(id: ID!): Job # job(id:ID!) these are it's arguments allowed, job() has datatype of Job
  jobs: [Job]
}

# Mutations are side effects
# type Mutation {
#   # createJob(companyId: ID, title: String, description: String) :ID
#   createJob(companyId: ID, title: String, description: String) :Job
# }
type Mutation {
  createJob(input: CreateJobInput) :Job
}

# Single argument per mutation = best practice
input CreateJobInput {
  # companyId: ID
  title: String
  description: String
}

type Company {
  id: ID!
  name: String
  description: String
  jobs: [Job]
}

type Job {
  id: ID!
  title: String
  company: Company
  description: String
}
# test